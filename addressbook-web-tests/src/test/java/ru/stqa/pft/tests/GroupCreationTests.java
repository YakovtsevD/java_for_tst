package ru.stqa.pft.tests;// Generated by Selenium IDE

import org.testng.Assert;
import org.testng.annotations.Test;
import ru.stqa.pft.model.GroupData;

import java.util.HashSet;
import java.util.List;

public class GroupCreationTests extends TestBase {

  @Test
  public void testGroupCreation() {
    app.getNavigationHelper().gotoGroupPage();
    // проверка количества групп до ввода новой
    List<GroupData> before = app.getGroupHelper().getGroupList();
    //int before = app.getGroupHelper().getGroupCount();
    app.getGroupHelper().initGroupCreation();
    GroupData group = new GroupData("newgroup404", "header404", "foottter404");
    app.getGroupHelper().fillGroupForm(group);
    //app.getGroupHelper().fillGroupForm(new GroupData("newgroup111", null, null));
    app.getGroupHelper().submitGroupCreation();
    app.getNavigationHelper().gotoGroupPage();
    // проверка количества групп после ввода новой
    List<GroupData> after = app.getGroupHelper().getGroupList();
    //int after = app.getGroupHelper().getGroupCount();
    Assert.assertEquals(after.size(), before.size()+1);

    //т.к. после создания порядок групп может измениться из-за сортировки по наименования, сравнивать надо неупорядоченные множества
    //чтобы сравнить до и после, в списке before мы должны добавить значение аналогичное тому, что добавляем в тесте
    // предварительно вычисляем id - считаем его максимальным в списке after
    int max = 0;
    for (GroupData g : after) {
      if (g.getId()>max) {
        max=g.getId();
      }
    }
    group.setId(max);
    before.add(group);
    Assert.assertEquals(new HashSet<Object>(before), new HashSet<Object>(after));

    app.getNavigationHelper().gotoHome();
    app.getSessionHelper().logout();
  }

}
