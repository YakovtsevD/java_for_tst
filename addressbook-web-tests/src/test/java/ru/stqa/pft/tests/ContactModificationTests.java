package ru.stqa.pft.tests;// Generated by Selenium IDE

import org.testng.Assert;
import org.testng.annotations.Test;
import ru.stqa.pft.model.ContactData;

import java.util.Comparator;
import java.util.List;

public class ContactModificationTests extends TestBase {

  @Test (enabled = false)
  public void testContactModification() {
    if (! app.getContactHelper().isThereAContact()) {
      app.getContactHelper().createContact(new ContactData("Ivana", "Ivanova", "iva@tut.by", "newgroup777"), true);
    }
    List<ContactData> before = app.getContactHelper().getContactList();  //выгружаем список контактов
    app.getContactHelper().initContactModification(before.size()-2);  // модифицируем предпоследний по порядку
    ContactData contact = new ContactData(before.get(before.size()-2).getId(), "Sam", "Sadko", "sam@tut.by", null);
    app.getContactHelper().fillContactForm(contact, false);
    app.getContactHelper().submitContactModification(); // подтвердили модификацию
    app.goTo().gotoHomePage(); // на страницу home

    List<ContactData> after = app.getContactHelper().getContactList();  // выгружаем лист для сравнения после модификации
    Assert.assertEquals(after.size(), before.size()); // проверка, что записей осталось столько же

    // из списка ДО модификации удаляем запись, которую модифицируем в тесте
    before.remove(before.size()-2);
    // добавляем запись со значениями модификации (в том числе и id)
    before.add(contact);

    // сортируем списки ДО и ПОСЛЕ по id и сравниваем их
    Comparator<? super ContactData> byId = (g1, g2) -> Integer.compare(g1.getId(), g2.getId());
    before.sort(byId);
    after.sort(byId);
    Assert.assertEquals(before, after);

    app.getSessionHelper().logout();
  }

}
