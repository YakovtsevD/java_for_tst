package ru.stqa.pft.tests;// Generated by Selenium IDE

import org.testng.annotations.Test;
import ru.stqa.pft.model.ContactData;
import ru.stqa.pft.model.Contacts;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

public class ContactCreationTests extends TestBase {

  @Test
  public void testContactCreation() {

    app.goTo().gotoHome();
    Contacts before = app.contact().all();  //выгружаем список контактов ДО
    ContactData contact = new ContactData().withFirstname("Ben").withLastname("Bensson").withEmail("ben@tut.by").withGroup("newgroup777"); // создаем объекти контакта который добавляем
    app.contact().create(contact);
    assertThat(app.contact().count(), equalTo(before.size()+1)); // сравниваем количество записей (count) до загрузки списка повторно, ловим ошибку раньше
    Contacts after = app.contact().all();  // выгружаем лист для сравнения после создания
    //assertThat(after.size(), equalTo(before.size()+1));
    assertThat(after, equalTo(
            before.withAdded(contact.withId(after.stream().mapToInt((g) -> g.getId()).max().getAsInt()))));
    //app.getSessionHelper().logout();
  }

  @Test
  public void testBadContactCreation() {

    app.goTo().gotoHome();
    Contacts before = app.contact().all();  //выгружаем список контактов ДО
    ContactData contact = new ContactData().withFirstname("Ben").withLastname("Bensson'").withEmail("ben@tut.by").withGroup("newgroup777"); // создаем объекти контакта который добавляем
    app.contact().create(contact);
    assertThat(app.contact().count(), equalTo(before.size())); // сравниваем количество записей (count) до загрузки списка повторно, ловим ошибку раньше
    Contacts after = app.contact().all();  // выгружаем лист для сравнения после создания
    //assertThat(after.size(), equalTo(before.size()));
    assertThat(after, equalTo(before));
    //app.getSessionHelper().logout();
  }


}

/*
  String[] langs = {"Java","Ci","Python","PHP","Go","CiSharp","Delfi","Fortran",
          "Assembler","Basic","Pascal","Perl","JavaScript","Ruby","Swift","Kotlin","Sql","Vala","Groovy","Ada"};

    for (String l : langs) {
    ContactData contact = new ContactData().withFirstname("Ben").withLastname(l).withEmail(l+"@tut.by").withGroup("newgroup777"); // создаем объекти контакта который добавляем
    app.contact().create(contact);
  }
*/
